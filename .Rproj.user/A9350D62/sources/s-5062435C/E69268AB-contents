#-------R Exercise Problem Set 4------------------------------------------------
#
# 
#-------Problem 8-----------------------------------
#Section e
bird.window<-read.csv(file.choose(), stringsAsFactors = FALSE) #Openning file
table(bird.window$angleDuringBirdCrash)/53 #Getting the proportions of deaths -
#in each of the groups.

#Secion f
bird.frequency <- data.frame(c(30, 15, 8), c(17.67, 17.67, 17.67), 
                             c(8.61, 0.403, 5.29),
                             stringsAsFactors = FALSE) #Farmers way?

colnames(bird.frequency)<- c("Observed", "Expected", "(O-E)^2 / E")
#Alternative (prefered) solution
vertical.var <- length(bird.window$angleDuringBirdCrash
       [grep("vertical",  bird.window$angleDuringBirdCrash)]) 
twenty.d<-length(bird.window$angleDuringBirdCrash
       [grep("20 degrees",  bird.window$angleDuringBirdCrash)]) 
forty.d<-length(bird.window$angleDuringBirdCrash
       [grep("40 degrees",  bird.window$angleDuringBirdCrash)]) 

#Using length of every column to create a frequency table. I select columns by
#identifying their names with grep function. This will be our observed value.

total <- vertical.var + twenty.d + forty.d #Making a total for all the values
expected.bird <- total*(1/3) #This is our expected value
table(expected.bird)

bird.frequency2 <- data.frame(c(vertical.var, twenty.d, forty.d), 
                              c(expected.bird, expected.bird, expected.bird), 
                              c(
                              (((vertical.var-expected.bird)^2)/expected.bird),
                              
                              (((twenty.d-expected.bird)^2)/expected.bird),
                              
                              (((forty.d-expected.bird)^2)/expected.bird)), 
                              stringsAsFactors = FALSE)
                             
#Longer, alternative solution. Would be good if I had a big set of data.
colnames(bird.frequency2)<- c("Observed", "Expected", "(O-E)^2 / E")

#Section g
chisq.test(bird.frequency2$Observed, NULL, correct = TRUE,  #Doing Chi-square
           p = rep(1/length(bird.frequency2$Observed), 
                   length(bird.frequency2$Observed)), rescale.p = FALSE, 
           simulate.p.value = FALSE, B = 2000)
#Wow, it gives me the same answer - X-squared = 14.3, with df = 2. 
#Although, I barely understand each of the arguments in the chisq.test, but 
#it works for me so far, 

#-------Problem 9-----------------------------------------------------

#Section d
#10 red, 21 pink and 9 white

#Making a frequency table
#I am going to use shorter method of assigning values to save time and sanity
A.observed.flower<- c(10, 21, 9)
A.expected.flower<- c(10, 20, 10)
A.ind.chi<- c(0,0.05,0.1)

#((10-10)^2)/10 = 0
#((21-20)^2)/20 = 0.05 
#((9-10)^2)/10 = 0.1

question.a<-data.frame("Observed" = A.observed.flower, 
                       "Expected" = A.expected.flower, 
                       "Individual Chi Square" = A.ind.chi,
                       stringsAsFactors = FALSE)
#We made the frequency table, which captures the essential data for us to do 
# chi-square test. 

chisq.test(question.a$Observed, p = c(0.25, 0.5, 0.25))
#Chi Square = 6.65, df = 2, p-value = 0.036. I made a mistake in my manual 
#calculations... or in calculating R. I have no clue where I went wrong
#EDIT: fixed it. p = c is a good way to implement ratio/predictions for observed
#Use p = c()

#Repeating what I have done for question.a dataframe and conducting chisq.test
B.observed.flower<- c(1000, 2100, 900)
B.expected.flower<- c(1000, 2000, 1000)
B.ind.chi<- c(0,5,10)

question.b<-data.frame("Observed" = B.observed.flower, 
                       "Expected" = B.expected.flower, 
                       "Individual Chi Square" = B.ind.chi,
                       stringsAsFactors = FALSE)
chisq.test(question.b$Observed, p = c(0.25, 0.5, 0.25))
#Results match with section B. 

#Section e

#The significance is found in the data from question.b, as there is more data
#compared to question.a. Thus it produces significance, as it is nearly matches
#with ratio of 1:2:1. 

#This means that we have to reject null hypothesis that all colored flowers have
#same probability of blooming. However, if people looked at first set of data, 
#they might commit Type 1 error, not rejecting null hypothesis when it is wrong.

#-------Original-------------------------------------------------------------
#------Problem 1----------------------------------
#Section d
prairie.dog<-read.csv(file.choose(), stringsAsFactors = FALSE) 
#Openning excel for prairie dogs data about mating and fertillity

chisq.test(prairie.dog$matingFrequency, NULL, correct = TRUE,  #Doing Chi-square
           p = rep(1/length(prairie.dog$matingFrequency), 
                   length(prairie.dog$matingFrequency)), rescale.p = FALSE, 
           simulate.p.value = FALSE, B = 2000)
#Chi-Square approximation may be incorrect. Cannot perform it. 
#Values less than 1 and 20% of values below 5. Need to fix it by changing data

#Section e
#Creating seperate variables for the 2x2 table
Birth2 <- c(81, 168) # 168 comes from sum of all values from 2 births and beyond
noBirth2 <- c(6, 8) 
prairie.dog2<-data.frame(Birth2 = Birth2, noBirth2 = noBirth2) #making dataframe
            row.names(prairie.dog2) <- c("1", "2=>") #Changing rows to proper -
                                                     #names
fisher.test(prairie.dog2$Birth2, prairie.dog2$noBirth2) #doing Fisher test
#results show me that p-value is 1 and 95th percentile interval being at 0.0256
#Not sure what to interpret of these results yet. Doesn't seem right though.

fisher.test(prairie.dog2) #Doing it, another way. x should be a matrix
#Recieved p-value = 0.56, 95th percentile = 0.189 & 2.33 (lower/upper), 
#odds ratio = 0.644. 

#Seems to me that fisher's test provides more biological information in this
#case than in question d. Although I have difficulty to interpret the numbers, 
#especially odss ratio...

#------Problem 3----------------------------------
#Section a
widow.health<-read.csv(file.choose(), stringsAsFactors = FALSE)
#Openning and setting data frame for the excel sheet in Rstudio
table(widow.health) #Turning it into table, as suggested from the question
chisq.test(table(widow.health) 
# I get x-squared = 0.037118, df = 2, p-value = 0.98. Is it right though?

chisq.test(table(widow.health$health_deterioration)) #Chi-Square for health-det.
#I get different result - x-squared = 43.887, df = 2, p-value = 2.952e-10\

chisq.test(table(widow.health$widowed))
#Here I get x-squared = 0, df=1 and p-value = 1. Clearly wrong.

#Hence I should not separate the columns from my chi-square. The chisq.test 
#takes all the columns and rows into the account from a get go. But just to 
#test, I will execute chisq.test with x and y variable.

chisq.test(table(widow.health$health_deterioration, widow.health$widowed), 
                 correct = TRUE)
#Got same answer as in line 105. 



#How do I make frequncy table with widow.health? Do I even need to? 
#EDIT: I guess I sort of made it by assigning table() to an object...
#Section b    
chisq.test(table(widow.health$widowed, widow.health$health_deterioration), 
           correct = TRUE)
#Got same answer as in line 105 and 111. Reversing rows and columns on a chi-
#-square equation does not change it. But what if I change rows/columns on 
# data frame? 

reverse.widow<-table(widow.health)
reverse.widow<-t(reverse.widow) #Hey, this fliped the table! Transpose function.
print(reverse.widow) #Checking if the reverse.widow is actually reversed. It is!

chisq.test(reverse.widow)
#Results are the same as in line 105, 111 and 120. Seems like fliping rows and 
#columns don't affect chi-square at all. 