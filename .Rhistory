weather_dl(station_ids = 51423, start = "2018-02-01", end = "2018-04-15")
weather <-weather::weather_dl("Vancouver")
weather <-weathercan::weather_dl("Vancouver")
weather
(station_ids = 51423,
start = "2018-02-01", end = "2018-04-15")
weather <-weathercan::weather_dl <-weather_dl
(station_ids = 51423,
start = "2018-02-01", end = "2018-04-15")
(station_ids = 51423,
start = "2018-02-01", end = "2018-04-15")
weather <-weathercan::<-weather_dl
(station_ids = 51423,
start = "2018-02-01", end = "2018-04-15")
(station_ids = 51423,
start = "2018-02-01", end = "2018-04-15")
weather <-weathercan::weather_dl(station_ids = 51423,
start = "2018-02-01", end = "2018-04-15")
weather
weather <-weathercan::weather_dl(station_ids = coords = c(50.667492,-120.329049),
start = "2018-02-01", end = "2018-04-15")
start = "2018-02-01", end = "2018-04-15")
weathercan:: stations_search("Vancouver")
weathercan:: stations_search("Vancouver", "Squamish")
weathercan:: stations_search c("Vancouver", "Squamish")
weathercan:: stations_search (c("Vancouver", "Squamish"))
weathercan:: stations_search (Squamish)
weathercan:: stations_search ("Squamish")
weathercan:: stations_search ("Pemperton")
weathercan:: stations_search ("Vancouver")
weathercan:: stations_search ("Squamish")
weathercan:: stations_search ("Pemperton")
weathercan:: stations_search ("Pemberton")
list.files(path.data)
wd<-getwd()
dir()
Squamweather <- weather_dl(station_name = "Squamish", interval = day, start = 2000, end = 2001)
Squamweather <- weathercan:: weather_dl(station_name = "Squamish", interval = day, start = 2000, end = 2001)
Squamweather <- weathercan:: weather_dl("Squamish", interval = day, start = 2000, end = 2001)
Squamweather <- weathercan:: weather_dl(station_ids = 337, interval = "day",
start = "1959-01-01", end = "1956-01-01")
Squamweather <- weathercan:: weather_dl(station_ids = 337, interval = "day",
start = "2018-01-01", end = "2019-01-01")
Squamweather <- weathercan:: weather_dl(station_ids = 337, interval = "day",
start = "1959-01-01", end = "1996-01-01")
list(Squamweather)
str(Squamweather)
list(Squamweather$year)
Squamweather <- weathercan:: weather_dl(station_ids = 337, interval = "day",
start = "1959-01-01", end = "1960-01-01")
list(Squamweather$year)
Squamweather <- weathercan:: weather_dl(station_ids = 337, interval = "day",
start = "1959-01-01", end = "1960-01-12")
list(Squamweather$year)
Squamweather <- weathercan:: weather_dl(station_ids = 337, interval = "day",
start = "1959-01-01", end = "1960-12-01")
list(Squamweather$year)
#Section b
plot(Squamweather$max_temp)
#Section b
plot(Squamweather$max_temp)
#Section b
plot(Squamweather$day, Squamweather$max_temp)
#Section b
plot(Squamweather$day, Squamweather$max_temp)
#Section b
plot(Squamweather$day, Squamweather$max_temp, type="l", lty=2,)
Squamweather$max_temp
#Section b
ggplot(Squamweather,aes(Squamweather$day, Squamweather$max_temp,
colour = treatment, shape = treatment))
library(ggplot2)
#Section b
ggplot(Squamweather,aes(Squamweather$day, Squamweather$max_temp,
colour = treatment, shape = treatment))
#Section b
ggplot(Squamweather,aes(Squamweather$day, Squamweather$max_temp,))
Squamweather$day, Squamweather$max_temp, type="l", lty=2
#Section b
ggplot(Squamweather,aes(Squamweather$day, Squamweather$max_temp))
Squamweather$day, Squamweather$max_temp, type="l", lty=2
#Section b
ggplot(Squamweather,aes(Squamweather$day ~ Squamweather$max_temp))
#Section b
ggplot(Squamweather,aes(Squamweather$day, Squamweather$max_temp))
Squamweather$day, Squamweather$max_temp, type="l", lty=2
#Section b
ggplot(Squamweather,mapping = aes(Squamweather$day, Squamweather$max_temp))
Squamweather$day, Squamweather$max_temp, type="l", lty=2
Squamweather$day
Squamweather$day
#Section b
ggplot(Squamweather,mapping = aes(Squamweather$day, Squamweather$max_temp)) +
geom_point(size = 2, alpha = 0.5)
#Section b
ggplot(Squamweather,mapping = aes(Squamweather$day, Squamweather$max_temp)) +
geom_point(size = 2, alpha = 0.5, na.rm = TRUE)
Squamweather$day
Squamweather$day
#Section b
ggplot(Squamweather,mapping = aes(Squamweather$day, Squamweather$max_temp)) +
geom_point(size = 2, alpha = 0.5, na.rm = TRUE)
#Section b
ggplot(Squamweather, mapping = aes(Squamweather$day, Squamweather$max_temp) na.rm = TRUE) +
geom_point(size = 2, alpha = 0.5, )
ggplot(Squamweather, mapping = aes(Squamweather$day, Squamweather$max_temp) na.rm = TRUE) +
geom_point(size = 2, alpha = 0.5, )
Squamweather <- datae.frame(weathercan:: weather_dl(station_ids = 337, interval = "day",
start = "1959-01-01", end = "1960-12-01"))
Squamweather <- data.frame(weathercan:: weather_dl(station_ids = 337, interval = "day",
start = "1959-01-01", end = "1960-12-01"))
Squamweather
list(Squamweather)
#Section b
ggplot(Squamweather, mapping = aes(Squamweather$day, Squamweather$max_temp) na.rm = TRUE) +
geom_point(size = 2, alpha = 0.5, )
#Section b
ggplot(Squamweather, mapping = aes(Squamweather$day, Squamweather$max_temp) na.rm = TRUE) +
geom_point(size = 2, alpha = 0.5, )
plot(Squamweather$day, Squamweather$max_temp)
plot(Squamweather$day, Squamweather$max_temp, na.rm = TRUE)
plot(Squamweather$day, Squamweather$max_temp, na.rm=TRUE)
#Section b
ggplot(data = Squamweather, aes(x = time, y = temp, group = station_name, colour = station_name)) +
theme_minimal() +
geom_line()
#Section b
ggplot(data = Squamweather$max_temp, aes(x = time, y = temp, group = station_name, colour = station_name)) +
theme_minimal() +
geom_line()
Squamweather <- weathercan:: weather_dl(station_ids = 337, interval = "day",
start = "1959-01-01", end = "1960-12-01")
#Section b
ggplot(data = Squamweather$max_temp, aes(x = time, y = temp, group = station_name, colour = station_name)) +
theme_minimal() +
geom_line()
#Section b
ggplot(Squamweather$max_temp, aes(x = time, y = temp, group = station_name, colour = station_name)) +
theme_minimal() +
geom_line()
#Section b
ggplot(Squamweather$max_temp, aes(x = time, y = temp, group = station_name, colour = station_name)) +
theme_minimal() +
geom_line()
#Section b
ggplot(Squamweather, aes(x = time, y = temp, group = station_name, colour = station_name)) +
theme_minimal() +
geom_line()
#Section b
ggplot(Squamweather, aes(x = time, y = "temp", group = station_name, colour = station_name)) +
theme_minimal() +
geom_line()
#Section b
ggplot(Squamweather, aes(x = time, y = Squamweather$max_temp, group = station_name, colour = station_name)) +
theme_minimal() +
geom_line()
#Section b
ggplot(Squamweather, aes(x = Squamweather$day, y = Squamweather$max_temp, group = station_name, colour = station_name)) +
theme_minimal() +
geom_line()
y = Squamweather$max_temp) +
#Section b
ggplot(Squamweather, aes(x = Squamweather$day,
y = Squamweather$max_temp)) +
theme_minimal() +
geom_line()
Squamweather(na.rm = TRUE)
Squamweather = na.rm = TRUE
ggplot(Squamweather, aes(x = Squamweather$day,
y = Squamweather$max_temp), na.rm = TRUE) +
theme_minimal() +
geom_line()
ggplot(Squamweather, aes(x = Squamweather$day,
y = Squamweather$max_temp),) +
theme_minimal() +
geom_line() +
na.rm = TRUE
ggplot(Squamweather, aes(x = Squamweather$day,
y = Squamweather$max_temp),) +
theme_minimal() +
geom_line()
#assignment
citation("weathercan")
#Trying to get graph for the Squamish Category
ggplot(Squamweather, aes(x = Squamweather$day,
y = Squamweather$max_temp),) +
theme_minimal() +
geom_line()
# =============================================================================
# === 2) folder management ====================================================
# =============================================================================
# names of folders for output data (figures,data output,data)
# store names of the folders in an object
output.folder.names <- c("figures", "data.output", "data")
# and make the folders if they don't exit yet. No need to understand this now
for(i in 1:length(output.folder.names))
# you need to store in an object the file path to these folders so we can
# read from them and write to them.
# again no need to understand the code
path.figures <- paste(working.dir, "/", output.folder.names[1], "/", sep = "")
path.data.output <- paste(working.dir, "/", output.folder.names[2], "/",
sep = "")
path.data <- paste(working.dir, "/", output.folder.names[3], "/", sep = "")
# test saving file to output folder
write.csv(output.folder.names, paste(path.data.output, "uselessnames.csv"),
row.names = FALSE)
path.data.output <- paste(working.dir, "/", output.folder.names[2], "/",
sep = "")
# I like to set the working dir so I can always retrace where files should be
# in case the code fails
working.dir <- getwd()
# =============================================================================
# === 2) folder management ====================================================
# =============================================================================
# names of folders for output data (figures,data output,data)
# store names of the folders in an object
output.folder.names <- c("figures", "data.output", "data")
# and make the folders if they don't exit yet. No need to understand this now
for(i in 1:length(output.folder.names))
# you need to store in an object the file path to these folders so we can
# read from them and write to them.
# again no need to understand the code
path.figures <- paste(working.dir, "/", output.folder.names[1], "/", sep = "")
path.data.output <- paste(working.dir, "/", output.folder.names[2], "/",
sep = "")
path.data <- paste(working.dir, "/", output.folder.names[3], "/", sep = "")
# test saving file to output folder
write.csv(output.folder.names, paste(path.data.output, "uselessnames.csv"),
row.names = FALSE)
#Acquiring data from Squamish station 337, in days, from 1959 to 1960.
Squamweather <- data.frame(weathercan:: weather_dl(station_ids = 337,
interval = "day",
start = "1959-01-01", end = "1960-12-01"))
#Acquiring data from Squamish station 337, in days, from 1959 to 1960.
Squamweather <- data.frame(weathercan:: weather_dl(station_ids = 337,
interval = "day",
start = "1959-01-01", end = "1960-12-01"))
#Trying to get graph for the Squamish Category
ggplot(Squamweather, aes(x = Squamweather$day,
y = Squamweather$max_temp),) +
theme_minimal() +
geom_line()
plot(Squamweather$day, Squamweather$max_temp)
theme_minimal() +
geom_line()
theme_minimal() +
geom_line()
#Trying to get graph for the Squamish Category
ggplot(Squamweather, aes(x = Squamweather$day,
y = Squamweather$max_temp),) +
theme_minimal() +
geom_line()
#Trying to get graph for the Squamish Category
ggplot(Squamweather, aes(x = Squamweather$day,
y = Squamweather$max_temp)) +
theme_minimal() +
geom_line()
geom_path(na.rm = TRUE)
#Trying to get graph for the Squamish Category
ggplot(Squamweather, aes(x = Squamweather$day,
y = Squamweather$max_temp)) +
theme_minimal() +
geom_line()
library(weathercan)
stations_search("Kamloops", interval = "hour")
stations_search(coords = c(50.667492, -120.329049),
dist = 20, interval = "hour")
head(stations)
weather_dl(station_ids = 51423, start = "2018-02-01", end = "2018-04-15")
#Trying to get graph for the Squamish Category
ggplot(Squamweather, aes(x = Squamweather$day,
y = Squamweather$max_temp)) +
theme_minimal() +
geom_line()
#Trying to get graph for the Squamish Category
ggplot(na.omit(Squamweather), aes(x = Squamweather$day,
y = Squamweather$max_temp)) +
theme_minimal() +
geom_line()
#Trying to get graph for the Squamish
ggplot(na.omit(Squamweather$max_temp), aes(x = day, y = Max Temp)
#Trying to get graph for the Squamish
ggplot(na.omit(Squamweather$max_temp), aes(x = "day", y = "Max Temp")
# I like to set the working dir so I can always retrace where files should be
# in case the code fails
working.dir <- getwd()
# I like to set the working dir so I can always retrace where files should be
# in case the code fails
working.dir <- getwd()
# =============================================================================
# === 2) folder management ====================================================
# =============================================================================
# names of folders for output data (figures,data output,data)
# store names of the folders in an object
output.folder.names <- c("figures", "data.output", "data")
# =============================================================================
# === 2) folder management ====================================================
# =============================================================================
# names of folders for output data (figures,data output,data)
# store names of the folders in an object
output.folder.names <- c("figures", "data.output", "data")
# and make the folders if they don't exit yet. No need to understand this now
for(i in 1:length(output.folder.names))
if(file.exists(output.folder.names[i]) == FALSE)
dir.create(output.folder.names[i])
# you need to store in an object the file path to these folders so we can
# read from them and write to them.
# again no need to understand the code
path.figures <- paste(working.dir, "/", output.folder.names[1], "/", sep = "")
path.data.output <- paste(working.dir, "/", output.folder.names[2], "/",
sep = "")
path.data <- paste(working.dir, "/", output.folder.names[3], "/", sep = "")
# test saving file to output folder
write.csv(output.folder.names, paste(path.data.output, "uselessnames.csv"),
row.names = FALSE)
path.data <- paste(working.dir, "/", output.folder.names["Analysis"], "/", sep = "")
path.data.output <- paste(working.dir, "/", output.folder.names["Figures"], "/",
sep = "")
# you need to store in an object the file path to these folders so we can
# read from them and write to them.
# again no need to understand the code
path.figures <- paste(working.dir, "/", output.folder.names["Data"], "/", sep = "")
# you need to store in an object the file path to these folders so we can
# read from them and write to them.
# again no need to understand the code
path.figures <- paste(working.dir, "/", output.folder.names["Data"], "/", sep = "")
path.data.output <- paste(working.dir, "/", output.folder.names["Figures"], "/",
sep = "")
path.data <- paste(working.dir, "/", output.folder.names["Analysis"], "/", sep = "")
# test saving file to output folder
write.csv(output.folder.names, paste(path.data.output, "uselessnames.csv"),
row.names = FALSE)
path.data <- paste(working.dir, "/", output.folder.names["Analysis"], "/", sep = "")
# test saving file to output folder
write.csv(output.folder.names, paste(path.data.output, "Analysis.csv"),
row.names = FALSE)
# test saving file to output folder
write.csv(output.folder.names, paste(path.data.output, "Analysis.csv"),
row.names = FALSE)
path.data <- paste(working.dir, "/", output.folder.names["Analysis"], "/", sep = "")
path.data <- paste(working.dir, "/", output.folder.names["analysis"], "/", sep = "")
path.data.output <- paste(working.dir, "/", output.folder.names["figures"], "/",
sep = "")
# you need to store in an object the file path to these folders so we can
# read from them and write to them.
# again no need to understand the code
path.figures <- paste(working.dir, "/", output.folder.names["data"], "/", sep = "")
write.csv(Squamweather, paste(path.data, "Squamish.csv", sep =""))
write.csv(Squamweather, paste(figures, "Squamish.csv", sep =""))
write.csv(Squamweather,paste(figures, "Squamish.csv", sep =""))
write.csv(Squamweather,paste(dir(), "Squamish.csv", sep =""))
dd <-rnorm(10, 5, 2)
path.figure <- paste(wd, "/2 Figures", sep="")
d <- read.csv(paste(path.data, "BirdWindowCrash (1).csv", sep = ""),
stringsAsFactors = FALSE)
# Make Paths to folder
path.data <- paste(wd, "/1 Data", sep="")
list.files(path.data)
path.figure <- paste(wd, "/2 Figures", sep="")
d <- read.csv(paste(path.data, "BirdWindowCrash (1).csv", sep = ""),
stringsAsFactors = FALSE)
pdf(paste(path.figure("/2 Figures/testgraph.pdf")), width = 5, height = 5)
pdf(paste(path.data("/2 Figures/testgraph.pdf")), width = 5, height = 5)
pdf(paste(path.data("/2 Figures/testgraph.pdf")), width = 5, height = 5)
dd <-rnorm(10, 5, 2)
pdf(paste(path.data("/2 Figures/testgraph.pdf")), width = 5, height = 5)
d <- read.csv(paste(path.data, "BirdWindowCrash (1).csv", sep = ""),
stringsAsFactors = FALSE)
dd <-rnorm(10, 5, 2)
pdf(paste(path.data("/2 Figures/testgraph.pdf")), width = 5, height = 5)
pdf(paste(path.data("/2 Figures/testgraph.pdf")), width = 5, height = 5)
pdf(paste(dir("/2 Figures/testgraph.pdf")), width = 5, height = 5)
pdf(paste("2 Figure"("/2 Figures/testgraph.pdf")), width = 5, height = 5)
pdf(paste(path.figure("/2 Figures/testgraph.pdf")), width = 5, height = 5)
list(path.figure)
pdf(paste(path.figure("/2 Figures/testgraph.pdf")), width = 5, height = 5)
path.figure <- paste(wd, "/2 Figures", sep="")
dd <-rnorm(10, 5, 2)
#Make the graph
plot(dd)
pdf(paste(path.figure("/2 Figures/testgraph.pdf")), width = 5, height = 5)
na.Squam <- which(is.na(Squamweather))
na.Squam
na.Squam <- which(is.na(Squamweather))
na.Squam
na.Squam <- which(is.na(Squamweather))
list.naSquam
list(na.Squam)
# I like to set the working dir so I can always retrace where files should be
# in case the code fails
working.dir <- getwd()
# you need to store in an object the file path to these folders so we can
# read from them and write to them.
# again no need to understand the code
path.figures <- paste(working.dir, "/", output.folder.names["data"], "/", sep = "")
path.data.output <- paste(working.dir, "/", output.folder.names["figures"], "/",
sep = "")
dd <-rnorm(10, 5, 2)
#Make the graph
plot(dd)
#Make the graph
plot(dd)
#Make the graph
plot(1)
#Make the graph
plot(1)
dev.off() #ends the graphing session
list(path.figure)
#Make the graph
plot(1)
table(path.figure)
#Make the graph
plot(1)
pdf(paste(path.figure("/2 Figures/testgraph.pdf")), width = 5, height = 5)
path.figure <- paste(wd, "/2 Figures", sep="")
path.figure
pdf(paste(path.figure, "/2 Figures/testgraph.pdf", sep=""),
width = 5, height = 5)
pdf(paste(path.figure, "/testgraph.pdf", sep=""),
width = 5, height = 5)
#Make the graph
plot(1)
dev.off() #ends the graphing session
#Make the graph
plot(1, 2)
#Make the graph
graph(1, 2)
#Make the graph
plot(1, 2)
#Making a box plot
ggplot(fruitfly, aes(y = fruitfly$longevity.days, x = fruitfly$treatment)) +
geom_boxplot(fill = "purple", varwidth = TRUE, notch = FALSE) +
labs(x = "Treatment", y = "Longitivity")
normal.distr <- function(Y, z,v) {
A <- sqrt(2*pi*v^2)
B <- exp(1)^-((z-Y)^2/(2*v^2))
Y <- ((1 / (A))*(B))
return(Y)
}
normal.distr(2,2, 2) #comparison check
dnorm(2, mean = 2, sd = 2) #comparison check
# Section c
#Making a Normal Distribution
x <- seq(-3, 3, length=100)
test<-normal.distr(x,0,1)
plot(x, test, type="l", lty=2, xlab="x value",
ylab="Density", main="Normal Distributions")
ggplot(na.omit(Squamweather$max_temp), aes(x = "day", y = "Max Temp")
theme_minimal() +
geom_line()
ggplot(na.omit(Squamweather$max_temp), aes(x = "day", y = "Max Temp")
ggplot(na.omit(Squamweather$max_temp), aes(x = "day", y = "Max Temp") +
geom_line()
library(ggplot2)
ggplot(na.omit(Squamweather$max_temp), aes(x = "day", y = "Max Temp") +
theme_minimal() +
geom_path(na.rm = TRUE)
ggplot(na.omit(Squamweather$max_temp), aes(x = "day", y = "Max Temp") +
ggplot(na.omit(Squamweather$max_temp), aes(x = "day", y = "Max Temp") +
geom_line()
theme_minimal() +
ggplot(na.omit(Squamweather$max_temp), aes(x = "day", y = "Max Temp") +
theme_minimal() +
geom_line()
dd <-rnorm(10, 5, 2)
#Make the graph
plot(dd)
pdf(paste(path.figure, "/testgraph.pdf", sep=""),
width = 5, height = 5)
#Make the graph
plot(dd)
dev.off() #ends the graphing session
nA <- 40 # Has to be an even number
nB <- 40 #Just
# step 1 the data
set.seed(1)
A <- c(rnorm(nA/2, 5, 2), rnorm(nA/2, 5, 2))
hist(A)
mean(A)
abline(v=mean(A), col = "red")
mean(A)
hist(A)
B <- rnorm(nB, 25, 2)
# bimodal distribution!
B <- rnorm(nB, 20, 2)
hist(B)
model.l <- lm(data$size ~ data$group)
par(mar = c(2,3,3,2), oma=c(3, 3, 3, 3))
mA<-par(mar = c(2,3,3,2), oma=c(3, 3, 3, 3))
plot(mA)
data.stuff<- file.choose()
data.stuff<- read.csv(file.choose())
data.stuff<- read.csv(file.choose())
2+2
#Control Graph
xlim / ylim
xlab/ylab
pch/ltw
cex
par() #is the key!
axis() #make new axi
text()/mtext() # allows for adding text. mtext is margin text
xlim.t <- range (x)
ylim.t <- range(y)
data.stuff<- read.csv(file.choose())
data.stuff<- read.csv(file.choose())
data.stuff <- read.csv(file.choose(), stringsAsFactors = FALSE)
depression.prev <- read.csv(file.choose(), stringsAsFactors = FALSE)
anxiety.prev <- read.csv(file.choose(), stringsAsFactors = FALSE)
str(depression.prev)
table(depression.prev)
head(depression.prev)
