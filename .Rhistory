test<-mental.global[c(mental.global$Entity %in% country, which(mental.global$Year == 2017)),
c(1,3,7,9)]
test<-mental.global[c(mental.global$Entity %in% country, mental.global$Year => 2017),
c(1,3,7,9)]
test<-mental.global[c(mental.global$Entity %in% country, mental.global$Year => 2017),
c(1,3,7,9)]
c(1,3,7,9)
test<-mental.global[c(mental.global$Entity %in% country, mental.global$Year => 2017),
c(1,3,7,9)]
test<-mental.global[c(mental.global$Entity %in% country, mental.global$Year = 2017), c(1,3,7,9)]
test<-mental.global[c(mental.global$Entity %in% country, mental.global$Year == 2017), c(1,3,7,9)]
ment.and.sub <- read.csv("prevalence-by-mental-and-substance-use-disorder.csv",
header = TRUE, sep = ",",stringsAsFactors = FALSE)
#
?read.csv
country.num <- unique(ment.and.sub$Entity)
country.num
# to find the rows that are world
world.rows <- which(ment.and.sub$Entity == "World")
world.rows
# to remove the rows that are world
new.ment.and.sub <- ment.and.sub[-c(world.rows),]
new.ment.and.sub
world.rows.gone <- which(new.ment.and.sub$Entity == "World")
world.rows.gone
# now lets look at the other things we don't want
rm.ent <- unique(new.ment.and.sub$Entity)
rm.ent
# to remove the rest of things we don't want
dont.want <- c("Andean Latin America", "Central Asia", "Central Europe",
"Central Europe, Eastern Europe, and Central Asia",
"Central Latin America", "Central Sub-Saharan Africa",
"Eastern Europe", "Eastern Sub-Saharan Africa", "High SDI",
"High-income", "High-income Asia Pacific", "High-middle SDI",
"Latin America and Caribbean", "Low SDI", "Low-middle SDI",
"Middle SDI", "North Africa and Middle East", "North America",
"Oceania", "South Asia", "Southeast Asia",
"Southeast Asia, East Asia, and Oceania",
"Southern Latin America", "Southern Sub-Saharan Africa",
"Sub-Saharan Africa", "Tropical Latin America",
"United Kingdom", "Western Europe", "Western Sub-Saharan Africa")
dont.want
length(dont.want)
# --- freestyle coding -----
# data frame new.ment.and.sub
str(new.ment.and.sub)
# make copy called d.t
d.t <- new.ment.and.sub
# let's go through Entity and exclude all entries in dont.want
for(i in 1:length(dont.want)){
#i <- 1
print(i)
print(paste("exclude ", dont.want[i], sep = ""))
# temprary data set
# which( d.t$Entity == dont.want[i]) # where are the specific names
print(paste ("how many entries: ", length(which(d.t$Entity == dont.want[i])),
sep = ""))
d.t <- d.t[d.t$Entity != dont.want[i],]
# (d.t$Entity == dont.want[i])
#print(length(which(d.t$Entity == dont.want[i])))
print(paste ("how many entries after: ", length(which(d.t$Entity == dont.want[i])),
sep = ""))
}
# go and check if it is indeed gone
unique(d.t$Entity)
# make a loop to subset per country
head(d.t)
d.tt <- d.t[d.t$Year == "2017",]
d.tt$Year
head(d.tt)
# extra challeng -> for each country get regression coeeficient between two
# disorders and plot them against something... #ME like country GDP
# -------
#
for(i in 1:length(dont.want)){
if(new.ment.and.sub$Entity == dont.want[i]){
store.result <- which(new.ment.and.sub$Entity == dont.want[i])
}
}
warnings()
store.result
last <- which(new.ment.and.sub$Entity == "Western Sub-Saharan Africa")
last
sdis <- which
sdifind <- find(SDI, mode = "any", numeric = FALSE, simple.words = TRUE )
?which
# we want to remove everything
### lets try deleting afghanistan
# test.rows <- which(ment.and.sub$Entity == "Afghanistan")
# test.rows
#
# test.ment.and.sub <- ment.and.sub[-c(test.rows),]
# head(test.ment.and.sub)
#
# test.ment.and.sub
#
# new.ment.and.sub
##
storage.r <- rep(na,)
storage.r <- rep(na,)
store.result
warnings()
for(i in 1:length(dont.want)){
if(new.ment.and.sub$Entity == dont.want[i]){
store.result <- which(new.ment.and.sub$Entity == dont.want[i])
}
}
warnings()
store.result
# let's go through Entity and exclude all entries in dont.want
for(i in 1:length(dont.want)){
#i <- 1
print(i)
print(paste("exclude ", dont.want[i], sep = ""))
# temprary data set
# which( d.t$Entity == dont.want[i]) # where are the specific names
print(paste ("how many entries: ", length(which(d.t$Entity == dont.want[i])),
sep = ""))
d.t <- d.t[d.t$Entity != dont.want[i],]
# (d.t$Entity == dont.want[i])
#print(length(which(d.t$Entity == dont.want[i])))
print(paste ("how many entries after: ", length(which(d.t$Entity == dont.want[i])),
sep = ""))
}
print(i)
print(paste("exclude ", dont.want[i], sep = ""))
# temprary data set
# which( d.t$Entity == dont.want[i]) # where are the specific names
print(paste ("how many entries: ", length(which(d.t$Entity == dont.want[i])),
sep = ""))
d.t <- d.t[d.t$Entity != dont.want[i],]
# (d.t$Entity == dont.want[i])
#print(length(which(d.t$Entity == dont.want[i])))
print(paste ("how many entries after: ", length(which(d.t$Entity == dont.want[i])),
sep = ""))
# go and check if it is indeed gone
unique(d.t$Entity)
# make a loop to subset per country
head(d.t)
test<-mental.global[c(mental.global$Entity %in% country, mental.global$Year == "2017"), c(1,3,7,9)]
#
#
#
#
#
#
#
#
#
# read csv
ment.and.sub <- read.csv("prevalence-by-mental-and-substance-use-disorder.csv",
header = TRUE, sep = ",",stringsAsFactors = FALSE)
#
#
#
#
#
#
#
#
#
# read csv
ment.and.sub <- read.csv(file.choose(),
header = TRUE, sep = ",",stringsAsFactors = FALSE)
#
?read.csv
country.num <- unique(ment.and.sub$Entity)
# to find the rows that are world
world.rows <- which(ment.and.sub$Entity == "World")
# to remove the rows that are world
new.ment.and.sub <- ment.and.sub[-c(world.rows),]
new.ment.and.sub
world.rows.gone <- which(new.ment.and.sub$Entity == "World")
# now lets look at the other things we don't want
rm.ent <- unique(new.ment.and.sub$Entity)
dont.want <- c("Andean Latin America", "Central Asia", "Central Europe",
"Central Europe, Eastern Europe, and Central Asia",
"Central Latin America", "Central Sub-Saharan Africa",
"Eastern Europe", "Eastern Sub-Saharan Africa", "High SDI",
"High-income", "High-income Asia Pacific", "High-middle SDI",
"Latin America and Caribbean", "Low SDI", "Low-middle SDI",
"Middle SDI", "North Africa and Middle East", "North America",
"Oceania", "South Asia", "Southeast Asia",
"Southeast Asia, East Asia, and Oceania",
"Southern Latin America", "Southern Sub-Saharan Africa",
"Sub-Saharan Africa", "Tropical Latin America",
"United Kingdom", "Western Europe", "Western Sub-Saharan Africa")
length(dont.want)
# --- freestyle coding -----
# data frame new.ment.and.sub
str(new.ment.and.sub)
# let's go through Entity and exclude all entries in dont.want
for(i in 1:length(dont.want)){
#i <- 1
print(i)
print(paste("exclude ", dont.want[i], sep = ""))
# temprary data set
# which( d.t$Entity == dont.want[i]) # where are the specific names
print(paste ("how many entries: ", length(which(d.t$Entity == dont.want[i])),
sep = ""))
d.t <- d.t[d.t$Entity != dont.want[i],]
# (d.t$Entity == dont.want[i])
#print(length(which(d.t$Entity == dont.want[i])))
print(paste ("how many entries after: ", length(which(d.t$Entity == dont.want[i])),
sep = ""))
}
# make copy called d.t
d.t <- new.ment.and.sub
# let's go through Entity and exclude all entries in dont.want
for(i in 1:length(dont.want)){
#i <- 1
print(i)
print(paste("exclude ", dont.want[i], sep = ""))
# temprary data set
# which( d.t$Entity == dont.want[i]) # where are the specific names
print(paste ("how many entries: ", length(which(d.t$Entity == dont.want[i])),
sep = ""))
d.t <- d.t[d.t$Entity != dont.want[i],]
# (d.t$Entity == dont.want[i])
#print(length(which(d.t$Entity == dont.want[i])))
print(paste ("how many entries after: ", length(which(d.t$Entity == dont.want[i])),
sep = ""))
}
# go and check if it is indeed gone
unique(d.t$Entity)
d.tt <- d.t[d.t$Year == "2017",]
d.tt$Year
head(d.tt)
mental.global.2017 <- d.t[d.t$Year == "2017",]
test<-mental.global.2017[ ,c(1,3,7,9)]
test
#Getting only data that we need (country, year, anxiety and depression)
test<-data.frame(mental.global.2017[ ,c(1,3,7,9)])
test
cor(mental.global.2017[,7], mental.global.2017[,9])
cor(mental.global.2017[,9], mental.global.2017[,7])
cor(mental.global.2017[,9], mental.global.2017[,4])
cor(mental.global.2017[,9], mental.global.2017[,5])
cor(mental.global.2017[,9], mental.global.2017[,8])
cor(mental.global.2017[,9], mental.global.2017[,10])
cor(mental.global.2017[,10], mental.global.2017[,9])
cor(mental.global.2017[,10], mental.global.2017[, c(4:10)]
cor(mental.global.2017[,10], mental.global.2017[, c(4:9)]
i <- 1
rep(cor(mental.global.2017[,9], mental.global.2017[, c(i+1)])
?rep
rep(cor(mental.global.2017[,9], mental.global.2017[, c(i+1)])
rep(cor(mental.global.2017[,9], mental.global.2017[, c(i+1)]), 10)
rep(cor(mental.global.2017[,9], mental.global.2017[, c(i+1)]), 10)
cor(mental.global.2017[,9], mental.global.2017[, c(i+1)])
#Running Global Correlation
cor(mental.global.2017[,10], mental.global.2017[,9])  #Depression/Alcohol
cor(mental.global.2017[,9], mental.global.2017[, c(i+3)])
rep(cor(mental.global.2017[,9], mental.global.2017[, c(i+3)]), 10)
}
rep(cor(mental.global.2017[,9], mental.global.2017[, c(i+3)]), 10)
for(i in 1:10){
}
rep(cor(mental.global.2017[,9], mental.global.2017[, c(i+3)]), 10)
for(i in 1:7){
}
rep(cor(mental.global.2017[,9], mental.global.2017[, c(i+3)]), 10)
rep(cor(mental.global.2017[,9], mental.global.2017[, c(i+3)]), 7)
i+1
for(i in 1:7){
i+1
}
i <- 1
for(i in 1:7){
i+1
}
rep(cor(mental.global.2017[,9], mental.global.2017[, c(i+3)]), 7)
i <- 1
rep(cor(mental.global.2017[,9], mental.global.2017[, c(i+3)]), 7)
store.result
for(i in 1:length(dont.want)){
if(new.ment.and.sub$Entity == dont.want[i]){
store.result <- which(new.ment.and.sub$Entity == dont.want[i])
}
}
store.result
store.result <- which(new.ment.and.sub$Entity == dont.want[i])
if(new.ment.and.sub$Entity == dont.want[i]){
store.result <- which(new.ment.and.sub$Entity == dont.want[i])
}
store.result
for(i in 1:7)
rep(cor(mental.global.2017[,9], mental.global.2017[, c(i+3)]), 7)
rep(cor(mental.global.2017[,9], mental.global.2017[, c(i+3)]), 7)
i <- 1
rep(cor(mental.global.2017[,9], mental.global.2017[, c(i+3)]), 7)
length(mental.global.2017[,1:10])
for(i in 1:length(mental.global.2017[, 4:10]))
rep(cor(mental.global.2017[,9], mental.global.2017[, c(i+3)]), 7)
rep(cor(mental.global.2017[,9], mental.global.2017[, c(i+3)]), 7)
length(mental.global.2017[,4:10])
rep(cor(mental.global.2017[,9], mental.global.2017[, c(i+3)]), 7)
i <- 1
rep(cor(mental.global.2017[,9], mental.global.2017[, c(i+3)]), 7)
for(i in 1:length(mental.global.2017[, 4:10]))
for(i in 1:length(mental.global.2017[, 4:10]))
rep(cor(mental.global.2017[,9], mental.global.2017[, c(i+3)]), 7)
rep(cor(mental.global.2017[,9], mental.global.2017[, c(i+3)]), 7)
i <- 1
for(i in 1:length(mental.global.2017[, 4:10]))
rep(cor(mental.global.2017[,9], mental.global.2017[, c(i+3)]), 7)
i <- 1
rep(cor(mental.global.2017[,9], mental.global.2017[, c(i+3)]), 7)
rep(cor(mental.global.2017[,9], mental.global.2017[, c(i+3)]), length(mental.global.2017[, 4:10]))
for(i in 1:length(mental.global.2017[, 4:10])) {
rep(cor(mental.global.2017[,9], mental.global.2017[, c(i+3)]), length(mental.global.2017[, 4:10]))
}
print(test.cor)
test.cor<-rep(cor(mental.global.2017[,9], mental.global.2017[, c(i+3)]), length(mental.global.2017[, 4:10]))
for(i in 1:length(mental.global.2017[, 4:10])) {
test.cor<-rep(cor(mental.global.2017[,9], mental.global.2017[, c(i+3)]), length(mental.global.2017[, 4:10]))
print(test.cor)
}
for(i in 1:length(mental.global.2017[, 4:10])) {
test.cor<-rep(cor(mental.global.2017[,9], mental.global.2017[, c(i+3)]), length(mental.global.2017[, 4:10]))
print(test.cor)
}
test.cor<-rep(cor(mental.global.2017[,9], mental.global.2017[, c(i+3)], 7))
View(mental.global.2017)
for(i in 1:length(mental.global.2017[, 4:10])) {
test.cor<-rep(cor(mental.global.2017[,9], mental.global.2017[, c(i+3)], 7))
print(test.cor)
}
test.cor<-rep(cor(mental.global.2017[,9], mental.global.2017[, c(i+3)]), 7)
for(i in 1:length(mental.global.2017[, 4:10])) {
test.cor<-rep(cor(mental.global.2017[,9], mental.global.2017[, c(i+3)]), 7)
print(test.cor)
}
i <- 1
for(i in 1:length(mental.global.2017[, 4:10])) {
test.cor<-rep(cor(mental.global.2017[,9], mental.global.2017[, c(i+3)]), 7)
print(test.cor)
}
for(i in 1:7)) {
test.cor<-rep(cor(mental.global.2017[,9], mental.global.2017[, c(i+3)]), 7)
print(test.cor)
}
for(i in 1:7) {
test.cor<-rep(cor(mental.global.2017[,9], mental.global.2017[, c(i+3)]), 7)
print(test.cor)
}
for(i in 1:7) {
test.cor<-rep(cor(mental.global.2017[,9], mental.global.2017[, c(i+3)]), 7)
print(test.cor)
}
test.cor<-rep(cor(mental.global.2017[,9], mental.global.2017[, c(i+3)]))
for(i in 1:7) {
test.cor<-rep(cor(mental.global.2017[,9], mental.global.2017[, c(i+3)]))
print(test.cor)
}
test.cor<-rep(cor(mental.global.2017[,c(i+3)], mental.global.2017[, c(i+3)]), 7)
print(test.cor)
for(i in 1:7) {
test.cor<-rep(cor(mental.global.2017[,c(i+3)], mental.global.2017[, c(i+3)]), 7)
print(test.cor)
}
test.cor<-rep(cor(mental.global.2017[c(i+3),], mental.global.2017[, c(i+3)]), 7)
test.cor<-rep(cor(mental.global.2017[,9], mental.global.2017[, c(i+3)]), 7)
print(test.cor)
for(i in 1:7) {
test.cor<-rep(cor(mental.global.2017[,9], mental.global.2017[, c(i+3)]), 7)
print(test.cor)
}
test.cor<-rep(cor(mental.global.2017[,9], mental.global.2017[, c(i+3)]))
print(test.cor)
#Running Global Correlation
cor(mental.global.2017[,10], mental.global.2017[,9])  #Depression/Alcohol
for(i in 1:7) {
test.cor<-rep(cor(mental.global.2017[,9], mental.global.2017[, c(i+3)]))
print(test.cor)
}
test.cor<-rep(cor(mental.global.2017[,i>3] mental.global.2017[, c(i+3)]))
test.cor<-rep(cor(mental.global.2017[,i=>4] mental.global.2017[, c(i+3)]))
test.cor<-rep(cor(mental.global.2017[,4<=i] mental.global.2017[, c(i+3)]))
test.cor<-rep(cor(mental.global.2017[,10-i] mental.global.2017[, c(i+3)]))
test.cor<-rep(cor(mental.global.2017[,c(10-i)] mental.global.2017[, c(i+3)]))
test.cor<-rep(cor(mental.global.2017[,c(10-i)] mental.global.2017[, c(i+3)]) 7)
test.cor<-rep(cor(mental.global.2017[,i] mental.global.2017[, c(i+3)]) 7)
test.cor<-rep(cor(mental.global.2017[,9] mental.global.2017[, c(i+3)]) 7)
test.cor<-rep(cor(mental.global.2017[,10-i], mental.global.2017[, c(i+3)]) 7)
print(test.cor)
print(test.cor)
test.cor<-rep(cor(mental.global.2017[,10], mental.global.2017[, c(i+3)]) 7)
test.cor<-rep(cor(mental.global.2017[,i=>4], mental.global.2017[, c(i+3)]) 7)
test.cor<-rep(cor(mental.global.2017[,i > 3], mental.global.2017[, c(i+3)]) 7)
#
#
#
# Main, to set up the workflow
#   making folders
#
# Version of R
#                  _
# platform       x86_64-apple-darwin15.6.0
# arch           x86_64
# os             darwin15.6.0
# system         x86_64, darwin15.6.0
# status
# major          3
# minor          6.0
# year           2019
# month          04
# day            26
# svn rev        76424
# language       R
# version.string R version 3.6.0 (2019-04-26)
# nickname       Planting of a Tree
#
#
#  Packages used
install.packages("corrplot")
install.packages("data.table")
install.packages("dplyr")
install.packages("formattable")
install.packages("tidyr")
install.packages("xtable")
#  Libraries used
library("corrplot")
library("data.table")
library("dplyr")
library("formattable")
library("tidyr")
library("xtable")
#
#
#
#
#
work.dir <- getwd()
#
#
#
make.folder.names <- c("data", "figures", "data.output")
for(i in 1:length(make.folder.names))
if(file.exists(make.folder.names[i]) == FALSE)
dir.create(make.folder.names[i])
path.data <- paste(work.dir, "/", make.folder.names[1], "/", sep = "")
path.figures <- paste(work.dir, "/", make.folder.names[2], "/", sep = "")
path.data.output <- paste(work.dir, "/", make.folder.names[3], "/", sep = "")
#
#
#
#
#
#
#
# To run everything
source("cleaning.R")
source("correlation.R")
source("manualcorrelations.R")
source("makingfigures.R")
#
#
#
source("manualcorrelations.R")
source("makingfigures.R")
source("makingfigures.R")
library("corrplot")
library("data.table")
library("dplyr")
library("formattable")
library("tidyr")
library("xtable")
#
#
#
#
#
work.dir <- getwd()
#
#
#
make.folder.names <- c("data", "figures", "data.output")
for(i in 1:length(make.folder.names))
if(file.exists(make.folder.names[i]) == FALSE)
dir.create(make.folder.names[i])
path.data <- paste(work.dir, "/", make.folder.names[1], "/", sep = "")
path.figures <- paste(work.dir, "/", make.folder.names[2], "/", sep = "")
path.data.output <- paste(work.dir, "/", make.folder.names[3], "/", sep = "")
#
#
#
#
#
#
#
# To run everything
source("cleaning.R")
#
#
#
#
#
#
#
# To run everything
source("cleaning.R")
source("correlation.R")
source("manualcorrelations.R")
source("makingfigures.R")
# make tables and store them (manually)
pdf(paste(path.figures,"table.2010.pdf", sep = ""))
form.table(upper.2010)
dev.off()
source("makingfigures.R")
source("makingfigures.R")
source("makingfigures.R")
